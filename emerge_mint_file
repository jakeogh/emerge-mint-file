#!/bin/bash

argcount=1
usage="file"
test "$#" -eq "${argcount}" || { echo "$0 ${usage}" > /dev/stderr && exit 1 ; } #"-ge=>=" "-gt=>" "-le=<=" "-lt=<" "-ne=!="

file=`readlink -f "${1}"`
shift
test -e "${file}" || { echo "File ${file} not found" && exit 1 ; }

echo "looking up original copy of ${file}"
#echo "target:"
#echo "/usr/portage/x11-base/xorg-server/xorg-server-1.16.4.ebuild"

package=`equery -q b "${file}"`
test -z "${package}" && { echo "equery -q b ${file} failed to return a package, might not be a portage installed file, exiting" ; exit 1 ; }
package_name_with_version=`echo "${package}" | cut -d '/' -f 2`
package_subfolder=`equery -q b -n "${file}"`
ebuild="/usr/portage/${package_subfolder}/${package_name_with_version}.ebuild"
echo "${ebuild}"

ebuild "${ebuild}" clean
echo "running ebuild ${ebuild} unpack"
work_folder=`ebuild "${ebuild}" unpack | grep "Source unpacked in /var/tmp/portage/" | cut -d ' ' -f 5-`
#echo "${work_folder}"
echo "compiling to make sure the file exists, todo: att find to check for possible results in ${work_folder}"
ebuild "${ebuild}" compile

target_file="${work_folder}/${package_name_with_version}/${file}"
echo "${target_file}"
